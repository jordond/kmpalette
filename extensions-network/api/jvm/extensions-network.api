public final class com/kmpalette/extensions/network/NetworkDominantColorStateKt {
	public static final fun rememberNetworkDominantColorState-n5X53cU (JJILio/ktor/client/HttpClient;Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Landroidx/compose/runtime/Composer;II)Lcom/kmpalette/DominantColorState;
}

public final class com/kmpalette/extensions/network/NetworkPaletteKt {
	public static final fun rememberGeneratePalette (Lio/ktor/http/Url;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Landroidx/compose/runtime/Composer;II)Lcom/kmpalette/PaletteResult;
}

public final class com/kmpalette/extensions/network/NetworkPaletteStateKt {
	public static final fun rememberNetworkPaletteState (ILio/ktor/client/HttpClient;Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Landroidx/compose/runtime/Composer;II)Lcom/kmpalette/PaletteState;
}

public final class com/kmpalette/loader/NetworkLoader : com/kmpalette/loader/ImageBitmapLoader {
	public static final field $stable I
	public static final field Companion Lcom/kmpalette/loader/NetworkLoader$Companion;
	public fun <init> ()V
	public fun <init> (Lio/ktor/client/HttpClient;Lio/ktor/client/request/HttpRequestBuilder;)V
	public synthetic fun <init> (Lio/ktor/client/HttpClient;Lio/ktor/client/request/HttpRequestBuilder;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun load (Lio/ktor/http/Url;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun load (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/kmpalette/loader/NetworkLoader$Companion {
	public final fun getDefault ()Lcom/kmpalette/loader/NetworkLoader;
}

public final class com/kmpalette/loader/NetworkLoaderKt {
	public static final fun rememberNetworkLoader (Lio/ktor/client/HttpClient;Lio/ktor/client/request/HttpRequestBuilder;Landroidx/compose/runtime/Composer;II)Lcom/kmpalette/loader/NetworkLoader;
}

