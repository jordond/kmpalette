name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    types: [ opened, synchronize, reopened, ready_for_review ]
    paths-ignore:
      - 'art/**'
      - '**.md'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  verify:
    name: "Verify"
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v3

      - name: Binary Compatibility Validation
        uses: gradle/gradle-build-action@v2
        with:
          arguments: apiCheck --scan

      - name: Lint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lint --scan

  test:
    strategy:
      matrix:
        config: [
          { target: "default", os: "ubuntu-latest", tasks: "allTest", continueOnError: false },
          { target: "osx", os: "macos-latest", tasks: "test", continueOnError: false },
          { target: "package", os: "ubuntu-latest", tasks: ":demo:composeApp:packageDistributionForCurrentOS", continueOnError: false }
        ]
    runs-on: ${{ matrix.config.os }}
    name: Test ${{ matrix.config.target }}
    needs: verify
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Cache Konan
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/caches
            ~/.konan/dependencies
            ~/.konan/kotlin-native-prebuilt-macos-*
          key: ${{ runner.os }}-konan-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v3

      - name: Run ${{ matrix.config.target }} tests
        continue-on-error: ${{ matrix.config.continueOnError }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ matrix.config.tasks }} --scan

  test-instrumented:
    strategy:
      matrix:
        api-level: [ 24, 29, 31 ]
    runs-on: macos-latest
    name: Test API ${{ matrix.api-level }}
    needs: verify
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v3

      - name: Run tests for API ${{ matrix.api-level }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          force-avd-creation: false
          ram-size: 4096M
          emulator-boot-timeout: 12000
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          script: ./gradlew connectedCheck --scan

  test-browser:
    runs-on: ubuntu-latest
    name: Test JS in browser
    needs: verify
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v3

      - name: Setup headless Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Run tests in browser
        run: ./gradlew jsTest --scan
